import java.util.HashMap;
import java.util.Map;

class Node {
    int key;
    int value;
    Node prev;
    Node next;

    public Node(int key, int value) {
        this.key = key;
        this.value = value;
    }
}

class MyStructure {
    private Map<Integer, Node> map;
    private Node head;
    private Node tail;

    public MyStructure() {
        map = new HashMap<>();
        head = new Node(-1, -1); 
        tail = new Node(-1, -1); 
        head.next = tail;
        tail.prev = head;
    }

    public void add(int key, int value) {
		if(!map.containsKey(key)){
			Node node = new Node(key, value);
			map.put(key, node);
			
			node.prev = head;
			node.next = head.next;
			head.next.prev = node;
			head.next = node;
		}

    }

    public void delete(int key) {
        if (!map.containsKey(key)) return;
        Node node = map.get(key);
        node.prev.next = node.next;
        node.next.prev = node.prev;
        map.remove(key);
    }
	
	private void printList() {
        Node current = head.next;
        while (current != tail) {
            System.out.println("Key: " + current.key + " Value: " + current.value);
            current = current.next;
        }
    }

    public static void main(String[] args) {
        MyStructure dataStructure = new MyStructure();
        dataStructure.add(1, 10);
        dataStructure.add(2, 20);
        dataStructure.add(3, 30);

        System.out.println("Before deletion:");
        dataStructure.printList();

        dataStructure.delete(2);

        System.out.println("\nAfter deletion of key 2:");
        dataStructure.printList();
    }

}
